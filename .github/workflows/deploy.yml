name: MapChat Spring Boot & Gradle & Docker & EC2 CD

on:
  push:
    branches: [ master ]
  pull_request: 
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest #ubuntu 최신 버전 
    steps:
      # 기본 체크아웃
      - name: Checkout
        uses: actions/checkout@v3

      # JDK version 설정
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          
#       # application-*.yml file 생성
#       - name: Create application-db.yml 
#         run:
#           touch ./src/main/resources/application-db.yml
#           echo "${{ secrets.DB_YML }}" >> ./src/main/resources/application-db.yml
      - name: Create application-oauth.yml 
          touch ./src/main/resources/applaction-oauth.yml
          echo "${{ secrets.OAUTH_YML }}" >> ./src/main/resources/applaction-oauth.yml
      
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      
      - name: Build with Gradle
        run: ./gradlew clean build

#       # Spring 어플리케이션 Docker Image 빌드
#       - name: Build Docker Image For Spring
#         run: |
#           docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
#           docker build -t ${{ secrets.DOCKER_USERNAME }}/도커 레파지토리 이름
#           docker push ${{ secrets.DOCKER_USERNAME }}/도커 레파지토리 이름
          
#       # 서버에서 Docker 이미지 실행
#       - name: EC2 Docker Run
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.EC2_HOST }}
#           username: ubuntu
#           key: ${{ secrets.EC2_KEY }}
#           script: |
#             docker rm -f $(docker ps -qa)
#             docker rmi ${{ secrets.DOCKER_USERNAME }}/도커 레파지토리 이름
#             docker pull ${{ secrets.DOCKER_USERNAME }}/도커 레파지토리 이름
#             docker-compose up -d
